# -*- coding: utf-8 -*-
"""ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1haM9bPyN6wJFQY1USvA3bqCUA0nN4Qrd

# üìä Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico

Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.

1) Configure o t√≠tulo na barra do navegador, da p√°gina do projeto no Streamlit e descri√ß√£o inicial do projeto (peso: 1,0)

- T√≠tulo na barra (`page_title`): Lista de Exerc√≠cios 4
- T√≠tulo da p√°gina (`header`): Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico
- Descri√ß√£o projeto (`write`): Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

import streamlit as st

st.set_page_config(
    page_title="Lista de Exerc√≠cios 4"
)

st.header("Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico")

st.write(
    "Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit."
)

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

import pandas as pd
df = pd.read_csv("empresas_dados.csv", sep=";")

st.dataframe(df.head(len(df)))

"""
3) Calcule os indicadores Margem L√≠quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo gr√°fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem L√≠quida = Lucro L√≠quido / Receita L√≠quida * 100
- ROA = Lucro L√≠quido / Ativo Total *  100
"""

import matplotlib.pyplot as plt
df["Margem L√≠quida"] = df["Lucro L√≠quido"] / df["Receita L√≠quida"] * 100
df["ROA"] = df["Lucro L√≠quido"] / df["Ativo Total"] * 100

st.subheader("Indicadores: Margem L√≠quida e ROA por Ano")
fig, ax = plt.subplots()
df_grouped = df.groupby("Ano")[["Margem L√≠quida", "ROA"]].mean()
df_grouped.plot(kind="line", marker="o", ax=ax)
plt.title("Margem L√≠quida e ROA (M√©dia por Ano)")
plt.ylabel("Percentual (%)")
plt.grid(True)
st.pyplot(fig)

"""
4) Utilize o pacote ipeadatapy e fa√ßa busca para encontrar o indicador que traga o IPCA, taxa de varia√ß√£o, em % e anual: (peso: 2,0)

- Baixe os dados no per√≠odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""
import ipeadatapy as ip

df1 = ip.timeseries("PRECOS_IPCAG")
df1 = df1.loc["2010":"2024"]
df1 = df1.rename(columns={"YEAR": "ANO", "VALUE ((% a.a.))": "IPCA"})
st.dataframe("df1")

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a fun√ß√£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conex√£o (chave prim√°ria) entre elas
- Crie nova coluna chamada Receita Real que ser√° o resultado da Receita L√≠quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta L√≠quida - ( Receita L√≠quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

df_completo = pd.merge(df, ipca, on="Ano", how="left")

df_completo["Receita Real"] = df_completo["Receita L√≠quida"] - (
    df_completo["Receita L√≠quida"] * (df_completo["IPCA"] / 100)
)

st.subheader("Dados Combinados com Receita Real")
st.dataframe(df_completo)

"""
6) Crie gr√°fico de linha que apresente as vari√°veis Receita L√≠quida e Receita Real ao longo dos anos (no mesmo gr√°fico) (peso: 1,0)"""

df_receitas = df_completo.groupby("Ano")[["Receita L√≠quida", "Receita Real"]].mean()

st.subheader("Receita L√≠quida vs Receita Real")
fig2, ax2 = plt.subplots()
df_receitas.plot(kind="line", marker="o", ax=ax2)
plt.title("Receita L√≠quida x Receita Real (m√©dia por ano)")
plt.ylabel("Valor em Reais")
plt.grid(True)
st.pyplot(fig2)

"""7) Fa√ßa os ajustes necess√°rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- Ca√ßa os ajustes necess√°rios no projeto para ser publicado no Streamlit
- Crie novo reposit√≥rio p√∫blico no GitHub e leve os arquivos .py e .csv pra l√°. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao reposit√≥rio da lista
"""

